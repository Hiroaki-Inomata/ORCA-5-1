#!/bin/bash

if test -z "$JMARECEIPT_ENV" ; then
    JMARECEIPT_ENV="@jma-receipt-env@"
fi
if ! test -f "$JMARECEIPT_ENV"; then
    exit 0
fi
if ! test -d "$MCP_TEMPDIR"; then
    exit 0
fi

. $JMARECEIPT_ENV

#-------------------------------------------#
#        クライアント印刷処理
# $1: LNK-PRTKANRI-RENNUM
# $2: LNK-PRTKANRI-TBL-KEY
# $3: LNK-PRTKANRI-TBL-GROUP
# $4: LNK-PRTKANRI-SHORI-RENNUM
# $5: LNK-PRTKANRI-SRYYM
# $6: LNK-PRTKANRI-SKYYMD
# $7: LNK-PRTKANRI-SHELLID
# $8: LNK-PRTKANRI-PRIORITY
# $9: LNK-PRTKANRI-TERMID
# ${10}: LNK-PRTKANRI-OPID
# ${11}: LNK-PRTKANRI-PRTNM
# ${12}: LNK-PRTKANRI-TBL-UUID
# ${13}: SPA-HOSPNUM
# ${14}: SPA-CLIENT-SHOWDIALOG
# ${15}: SPA-PRTCONF
# ${16}: SPA-PTID
#-------------------------------------------#

MCP_TEMPDIR=${MCP_TEMPDIR%/}/
PUSH_FILE=$(uuidgen).dat
PUSH_FILE_FULL=${MCP_TEMPDIR}${PUSH_FILE}
DATA_ID=${12} 
RECFILE="push_print002.db"
RECDIR=${RECORDDIR}
if [ -f ${PATCHRECORDDIR}/${RECFILE} ]; then
  RECDIR=${PATCHRECORDDIR}
fi

MONPUSHEVENT="/usr/lib/panda/bin/monpushevent"

do_push(){
  ${MONPUSHEVENT} ${RECDIR}/${RECFILE} ${PUSH_FILE_FULL}
}

        $DBSTUB -dir $LDDIRECTORY -bd orcabt ORCBCLPRT  -parameter "$1,$2,$3,$4,$5,$6,$7,$8,$9,${10},${11},${12},${13},${14},${15},${16},${PUSH_FILE},"
        
        if [[ "${15}" =~ ^[23]$ ]]; then
          files=($(find ${MCP_TEMPDIR} -name "${DATA_ID}_*.pdf"  2>/dev/null))
          size=${#files[@]}
          if [ ${size} -gt 0 ] ; then
            for f in ${files[@]}; do mv $f ${MCP_TEMPDIR}${f#${MCP_TEMPDIR}${DATA_ID}_}; done
            files=("${files[@]/#${MCP_TEMPDIR}${DATA_ID}_/${MCP_TEMPDIR}}")
#            if [ ${size} -eq 1 ] ; then
#              ${DBSTUB}  -dir ${LDDIRECTORY} -bd orcabt ORCBMBIMPORT -parameter "${DATA_ID},${files[0]},pdf"
#            else
              zip_file=${MCP_TEMPDIR}print.zip
              zip -j ${zip_file} ${files[@]}
              ${DBSTUB}  -dir ${LDDIRECTORY} -bd orcabt ORCBMBIMPORT -parameter "${DATA_ID},${zip_file},zip,short"
              
              [  -f "${PUSH_FILE_FULL}" ] && do_push

              rm -f ${PUSH_FILE_FULL}
#            fi
          fi
        fi

        exit 
