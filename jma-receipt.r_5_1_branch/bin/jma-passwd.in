#!/bin/bash

JMARECEIPT_ENV="@jma-receipt-env@"
if [ ! -f ${JMARECEIPT_ENV} ]; then
    echo "${JMARECEIPT_ENV} does not found."
    exit 1
fi
. $JMARECEIPT_ENV

if [ `whoami` != "${ORCAUSER}" ]; then
  echo "${ORCAUSER}ユーザーで実行してください。"
  exit 1
fi

if [ $# -ne 1 ]; then
  echo "ユーザーを指定してください。"
  exit 1
fi

USERID=${1}

COB_LIBRARY_PATH="$PATCHLIBDIR":"$ORCALIBDIR":"$PANDALIB"
export COB_LIBRARY_PATH
PWDCSQL="select count(*) from tbl_passwd where userid='${USERID}';"
PWDPSQL="select password from tbl_passwd where userid='${USERID}';"

# tbl_passwdのレコード有無チェック
create_pgpass
PWDC=`psql ${DBCONNOPTION} -At -c "${PWDCSQL}" ${DBNAME}`
RC=$?
if [ ${RC} -ne 0 ] ;then
  echo "ERROR: tbl_passwd を読めませんでした。"
  exit 1
fi
if [ ${PWDC} -eq "0" ]; then
  echo "パスワード設定処理 ... 指定したユーザーは登録されていません。処理は中止します。"
  exit 0
fi
PWDP=`psql ${DBCONNOPTION} -At -c "${PWDPSQL}" ${DBNAME}`
RC=$?
if [ ${RC} -ne 0 ] ;then
  echo "ERROR: tbl_passwd を読めませんでした。"
  exit 1
fi
if [ -z ${PWDP} ]; then
  echo "パスワード設定処理 ... 指定したユーザーは登録されていません。処理は中止します。"
  exit 0
fi

input_password() {
  PWD1=''
  PWD2=''
 
  trap "echo \"キャンセルされました。\"; stty echo; exit 1" 2
  while :
  do
    stty -echo
    echo
    echo "${USERID}のパスワードを設定します(8文字以上16文字以内)"
    echo -n "現在のパスワード: "
    read PWD0
    echo
    echo -n "新しいパスワード: "
    read PWD1
    echo
    echo -n "パスワード確認: "
    read PWD2
    echo
    if [ ${#PWD1} -lt 8 -o ${#PWD2} -lt 8 ]; then
      echo "8文字以上で入力してください。"
      continue
    fi
    if [ ${#PWD1} -gt 16 -o ${#PWD2} -gt 16 ]; then
      echo "16文字以内で入力してください。"
      continue
    fi
    if [ ${PWD1} = ${PWD2} ]; then
      break
    else
      echo "パスワード不一致です。"
    fi
  done
  stty echo
 
  return
}

input_password

export PASSWORD1="${PWD0}"
export PASSWORD2="${PWDP}"

trap "unset PASSWORD1; unset PASSWORD2" EXIT
${DBSTUB} -dir ${LDDIRECTORY} -bd orcabt ORCBAUTH
if [ $? -ne 0 ] ; then 
  echo "現在のパスワードが不一致です。"
  exit 1
fi

# passwdファイルからSQL文を作成
TEMP1=$(mktemp)
export TEMP1
trap "rm -f ${TEMP1}" EXIT

NPASS=`md5pass ${PWD1}`
echo "DELETE FROM tbl_passwd WHERE userid='${USERID}';" > ${TEMP1}
echo "INSERT INTO tbl_passwd (userid, password) VALUES ('${USERID}', '${NPASS}');" >> ${TEMP1}

${DBSTUB} -dir ${LDDIRECTORY} -bd orcabt ORCBSQL1 \
          -parameter "00,${TEMP1}"
if [ $? -ne 0 ] ; then 
  echo "パスワード設定処理 ... テーブル格納処理でエラーが発生しました。"
  exit 1
else
  echo "パスワード設定処理 ... 終了しました。"
  exit 0
fi
